// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User{
  id          String    @id @default(cuid())
  username    String    @db.VarChar(255)
  email       String    @db.VarChar(255)
  password    String    @db.VarChar(511)
  JournalEntries JournalEntry[]
  Meditations Meditation[]
  ReadingEntries ReadingEntry[]
  MoodEntries MoodEntry[]
  HobbyEntries HobbyEntry[]
}

model JournalEntry {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime  @default(now()) @db.Date
  gratefulFor     String    @db.VarChar(63)
  reason     String    @db.VarChar(63)
  @@unique([userId, date])
}


model Meditation {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime  @default(now()) @db.Date
  duration    Int       @db.Integer
}

model Book {
  id          String    @id @default(cuid())
  title       String    @db.VarChar(127)
  readingEntries  ReadingEntry[]
}

model ReadingEntry {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime  @default(now()) @db.Date
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      String
  numPages    Int       @db.Integer
}

model MoodEntry {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  mood        Mood      @relation(fields: [moodId], references: [id])
  moodId      String
  time        DateTime  @default(now())
}

model Mood {
  id          String    @id @default(cuid())
  name        String
  moodEntries MoodEntry[]
}

model Hobby {
  id          String    @id @default(cuid())
  name        String    @db.VarChar(127)
  hobbyEntries HobbyEntry[]
}

model HobbyEntry {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  hobby       Hobby      @relation(fields: [hobbyId], references: [id])
  hobbyId     String
  date        DateTime  @default(now()) @db.Date
}